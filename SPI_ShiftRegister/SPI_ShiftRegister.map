Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
                              ../AVR-Programming-Library/USART.o (__udivmodqi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                              ../AVR-Programming-Library/USART.o (__udivmodhi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
                              spi_SR.o (__divmodhi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                              spi_SR.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                              spi_SR.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
                              spi_SR.o (rand)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o) (__muluhisi3)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o) (__mulohisi3)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o) (__divmodsi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
                              /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o) (__umulhisi3)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

framebuffer         0x36              spi_SR.o

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .text          0x0000000000000000        0x0 spi_SR.o
 .data          0x0000000000000000        0x0 spi_SR.o
 .bss           0x0000000000000000        0x0 spi_SR.o
 .text.setFrameBuffer
                0x0000000000000000       0x36 spi_SR.o
 .text.frameBufferToBits_DB_NEW
                0x0000000000000000      0x17a spi_SR.o
 .text.sr_loadData_spi_fast
                0x0000000000000000       0x20 spi_SR.o
 .text.sr_loadData_alt
                0x0000000000000000       0x70 spi_SR.o
 .bss.data2     0x0000000000000000        0x2 spi_SR.o
 .data.data     0x0000000000000000        0x2 spi_SR.o
 .text          0x0000000000000000        0x0 ../AVR-Programming-Library/USART.o
 .data          0x0000000000000000        0x0 ../AVR-Programming-Library/USART.o
 .bss           0x0000000000000000        0x0 ../AVR-Programming-Library/USART.o
 .text.initUSART
                0x0000000000000000       0x22 ../AVR-Programming-Library/USART.o
 .text.transmitByte
                0x0000000000000000        0xe ../AVR-Programming-Library/USART.o
 .text.receiveByte
                0x0000000000000000        0xe ../AVR-Programming-Library/USART.o
 .text.printString
                0x0000000000000000       0x26 ../AVR-Programming-Library/USART.o
 .text.readString
                0x0000000000000000       0x5e ../AVR-Programming-Library/USART.o
 .text.printByte
                0x0000000000000000       0x32 ../AVR-Programming-Library/USART.o
 .text.printWord
                0x0000000000000000       0x76 ../AVR-Programming-Library/USART.o
 .text.printBinaryByte
                0x0000000000000000       0x3c ../AVR-Programming-Library/USART.o
 .text.nibbleToHexCharacter
                0x0000000000000000        0xc ../AVR-Programming-Library/USART.o
 .text.printHexByte
                0x0000000000000000       0x1e ../AVR-Programming-Library/USART.o
 .text.getNumber
                0x0000000000000000       0x44 ../AVR-Programming-Library/USART.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000000000000000       0x18 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
LOAD spi_SR.o
LOAD ../AVR-Programming-Library/USART.o
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x70c
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
                0x00000000000000a6                . = ALIGN (0x2)
 *(.text.*)
 .text.clearFrameBuffer
                0x00000000000000a6       0x34 spi_SR.o
                0x00000000000000a6                clearFrameBuffer
 .text.setFrameBufferColor
                0x00000000000000da       0x34 spi_SR.o
                0x00000000000000da                setFrameBufferColor
 .text.frameBufferToBits_DB_alt
                0x000000000000010e      0x1ea spi_SR.o
                0x000000000000010e                frameBufferToBits_DB_alt
 .text.spi_tranceiver
                0x00000000000002f8        0xc spi_SR.o
                0x00000000000002f8                spi_tranceiver
 .text.sr_loadData_spi
                0x0000000000000304       0x2e spi_SR.o
                0x0000000000000304                sr_loadData_spi
 .text.spi_init_master
                0x0000000000000332       0x10 spi_SR.o
                0x0000000000000332                spi_init_master
 .text.initTimer
                0x0000000000000342       0x2c spi_SR.o
                0x0000000000000342                initTimer
 .text.__vector_14
                0x000000000000036e       0xce spi_SR.o
                0x000000000000036e                __vector_14
 .text.startup.main
                0x000000000000043c      0x100 spi_SR.o
                0x000000000000043c                main
 .text.libgcc.div
                0x000000000000053c       0x28 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                0x000000000000053c                __udivmodhi4
 .text.libgcc.div
                0x0000000000000564       0x28 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
                0x0000000000000564                __divmodhi4
                0x0000000000000564                _div
 .text.avr-libc
                0x000000000000058c       0xc2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
                0x0000000000000628                rand_r
                0x000000000000062e                rand
                0x0000000000000638                srand
 .text.libgcc.mul
                0x000000000000064e       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_muluhisi3.o)
                0x000000000000064e                __muluhisi3
 .text.libgcc.mul
                0x0000000000000664       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_mulshisi3.o)
                0x0000000000000664                __mulshisi3
                0x000000000000066a                __mulohisi3
 .text.libgcc.div
                0x0000000000000674       0x38 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodsi4.o)
                0x0000000000000674                __divmodsi4
 .text.libgcc.mul
                0x00000000000006ac       0x18 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_umulhisi3.o)
                0x00000000000006ac                __umulhisi3
 .text.libgcc.div
                0x00000000000006c4       0x44 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodsi4.o)
                0x00000000000006c4                __udivmodsi4
                0x0000000000000708                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000708        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                0x0000000000000708                exit
                0x0000000000000708                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000708        0x4 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000070c                _etext = .

.data           0x0000000000800100        0x4 load address 0x000000000000070c
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800104                . = ALIGN (0x2)
                0x0000000000800104                _edata = .
                0x0000000000800104                PROVIDE (__data_end, .)

.bss            0x0000000000800104       0x37
                0x0000000000800104                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.bit_counter
                0x0000000000800104        0x1 spi_SR.o
                0x0000000000800104                bit_counter
 *(COMMON)
 COMMON         0x0000000000800105       0x36 spi_SR.o
                0x0000000000800105                framebuffer
                0x000000000080013b                PROVIDE (__bss_end, .)
                0x000000000000070c                __data_load_start = LOADADDR (.data)
                0x0000000000000710                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080013b        0x0
                0x000000000080013b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080013b                PROVIDE (__noinit_end, .)
                0x000000000080013b                _end = .
                0x000000000080013b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1a28
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .stab          0x00000000000006cc      0xe94 spi_SR.o
                                       0x12d8 (size before relaxing)
 .stab          0x0000000000001560      0x1b0 ../AVR-Programming-Library/USART.o
                                        0x954 (size before relaxing)
 .stab          0x0000000000001710      0x318 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
                                        0x324 (size before relaxing)

.stabstr        0x0000000000000000     0x1094
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1094 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x22
 *(.comment)
 .comment       0x0000000000000000       0x11 spi_SR.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ../AVR-Programming-Library/USART.o
 .comment       0x0000000000000011       0x11 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(rand.o)
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SPI_ShiftRegister.elf elf32-avr)
LOAD linker stubs
