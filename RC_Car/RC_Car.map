Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
                              ../AVR-Programming-Library/USART.o (__udivmodqi4)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
                              ../AVR-Programming-Library/USART.o (__udivmodhi4)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              rc_car.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              rc_car.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

spk_cnt             0x2               rc_car.o
spk_periods         0x4               rc_car.o
spk_idx             0x2               rc_car.o
rBuf                0x46              rc_car.o

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .text          0x0000000000000000        0x0 Lights.o
 .bss           0x0000000000000000        0x0 Lights.o
 .text.disableLights
                0x0000000000000000        0xa Lights.o
 .text          0x0000000000000000        0x0 MotorDriver.o
 .bss           0x0000000000000000        0x0 MotorDriver.o
 .text.motorShutOff
                0x0000000000000000       0x20 MotorDriver.o
 .text          0x0000000000000000        0x0 rc_car.o
 .bss           0x0000000000000000        0x0 rc_car.o
 .text.serialDataAvailable
                0x0000000000000000        0x8 rc_car.o
 .text.USART_Recieve
                0x0000000000000000        0xe rc_car.o
 .text.readAll  0x0000000000000000       0x3e rc_car.o
 .text          0x0000000000000000        0x0 RingBuffer.o
 .bss           0x0000000000000000        0x0 RingBuffer.o
 .text.peekRingBuf
                0x0000000000000000       0x22 RingBuffer.o
 .text          0x0000000000000000        0x0 Speaker.o
 .bss           0x0000000000000000        0x0 Speaker.o
 .text.setSpeakerOsc
                0x0000000000000000       0x12 Speaker.o
 .text.disableSpeaker
                0x0000000000000000       0x16 Speaker.o
 .text          0x0000000000000000        0x0 ../AVR-Programming-Library/USART.o
 .bss           0x0000000000000000        0x0 ../AVR-Programming-Library/USART.o
 .text.initUSART
                0x0000000000000000       0x22 ../AVR-Programming-Library/USART.o
 .text.transmitByte
                0x0000000000000000        0xe ../AVR-Programming-Library/USART.o
 .text.receiveByte
                0x0000000000000000        0xe ../AVR-Programming-Library/USART.o
 .text.printString
                0x0000000000000000       0x26 ../AVR-Programming-Library/USART.o
 .text.readString
                0x0000000000000000       0x58 ../AVR-Programming-Library/USART.o
 .text.printByte
                0x0000000000000000       0x32 ../AVR-Programming-Library/USART.o
 .text.printWord
                0x0000000000000000       0x76 ../AVR-Programming-Library/USART.o
 .text.printBinaryByte
                0x0000000000000000       0x3c ../AVR-Programming-Library/USART.o
 .text.nibbleToHexCharacter
                0x0000000000000000        0xc ../AVR-Programming-Library/USART.o
 .text.printHexByte
                0x0000000000000000       0x1e ../AVR-Programming-Library/USART.o
 .text.getNumber
                0x0000000000000000       0x4a ../AVR-Programming-Library/USART.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000000000000000       0x18 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000000       0x28 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
LOAD Lights.o
LOAD MotorDriver.o
LOAD rc_car.o
LOAD RingBuffer.o
LOAD Speaker.o
LOAD ../AVR-Programming-Library/USART.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x5e4
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_20
                0x00000000000000a6                . = ALIGN (0x2)
 *(.text.*)
 .text.initLights
                0x00000000000000a6       0x2c Lights.o
                0x00000000000000a6                initLights
 .text.setHeadLights
                0x00000000000000d2       0x10 Lights.o
                0x00000000000000d2                setHeadLights
 .text.setRearLights
                0x00000000000000e2       0x22 Lights.o
                0x00000000000000e2                setRearLights
 .text.initMotorDriver
                0x0000000000000104       0x3a MotorDriver.o
                0x0000000000000104                initMotorDriver
 .text.setMotorSpeed
                0x000000000000013e       0x6e MotorDriver.o
                0x000000000000013e                setMotorSpeed
 .text.setMotorStandby
                0x00000000000001ac        0xc MotorDriver.o
                0x00000000000001ac                setMotorStandby
 .text.USART_Transmit
                0x00000000000001b8        0xe rc_car.o
                0x00000000000001b8                USART_Transmit
 .text.sendString
                0x00000000000001c6       0x44 rc_car.o
                0x00000000000001c6                sendString
 .text.USART_Flush
                0x000000000000020a       0x10 rc_car.o
                0x000000000000020a                USART_Flush
 .text.sendAT   0x000000000000021a       0x18 rc_car.o
                0x000000000000021a                sendAT
 .text.setupHM11
                0x0000000000000232       0x10 rc_car.o
                0x0000000000000232                setupHM11
 .text.__vector_18
                0x0000000000000242       0x50 rc_car.o
                0x0000000000000242                __vector_18
 .text.startup.main
                0x0000000000000292      0x190 rc_car.o
                0x0000000000000292                main
 .text.initRingBuf
                0x0000000000000422       0x22 RingBuffer.o
                0x0000000000000422                initRingBuf
 .text.pushRingBuf
                0x0000000000000444       0x64 RingBuffer.o
                0x0000000000000444                pushRingBuf
 .text.popRingBuf
                0x00000000000004a8       0x66 RingBuffer.o
                0x00000000000004a8                popRingBuf
 .text.initSpeaker
                0x000000000000050e       0x58 Speaker.o
                0x000000000000050e                initSpeaker
 .text.setSpeaker
                0x0000000000000566        0xc Speaker.o
                0x0000000000000566                setSpeaker
 .text.__vector_9
                0x0000000000000572       0x6e Speaker.o
                0x0000000000000572                __vector_9
                0x00000000000005e0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000005e0        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000000000005e0                exit
                0x00000000000005e0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000005e0        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000005e4                _etext = .

.data           0x0000000000800100        0xc load address 0x00000000000005e4
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 Lights.o
 .data          0x0000000000800100        0x0 MotorDriver.o
 .data          0x0000000000800100        0x0 rc_car.o
 .data          0x0000000000800100        0x0 RingBuffer.o
 .data          0x0000000000800100        0x0 Speaker.o
 .data          0x0000000000800100        0x0 ../AVR-Programming-Library/USART.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800100        0xc rc_car.o
 *(.gnu.linkonce.d*)
                0x000000000080010c                . = ALIGN (0x2)
                0x000000000080010c                _edata = .
                0x000000000080010c                PROVIDE (__data_end, .)

.bss            0x000000000080010c       0x4e
                0x000000000080010c                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080010c       0x4e rc_car.o
                0x000000000080010c                spk_cnt
                0x000000000080010e                spk_periods
                0x0000000000800112                spk_idx
                0x0000000000800114                rBuf
                0x000000000080015a                PROVIDE (__bss_end, .)
                0x00000000000005e4                __data_load_start = LOADADDR (.data)
                0x00000000000005f0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080015a        0x0
                0x000000000080015a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080015a                PROVIDE (__noinit_end, .)
                0x000000000080015a                _end = .
                0x000000000080015a                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2910
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o
 .stab          0x00000000000006cc      0x624 Lights.o
                                        0x678 (size before relaxing)
 .stab          0x0000000000000cf0      0x4e0 MotorDriver.o
                                        0x708 (size before relaxing)
 .stab          0x00000000000011d0      0x9b4 rc_car.o
                                        0xcd8 (size before relaxing)
 .stab          0x0000000000001b84      0x5d0 RingBuffer.o
                                        0x834 (size before relaxing)
 .stab          0x0000000000002154      0x48c Speaker.o
                                        0x708 (size before relaxing)
 .stab          0x00000000000025e0      0x330 ../AVR-Programming-Library/USART.o
                                        0xabc (size before relaxing)

.stabstr        0x0000000000000000     0x141b
 *(.stabstr)
 .stabstr       0x0000000000000000     0x141b /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 Lights.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 MotorDriver.o
 .comment       0x0000000000000000       0x12 rc_car.o
 .comment       0x0000000000000000       0x12 RingBuffer.o
 .comment       0x0000000000000000       0x12 Speaker.o
 .comment       0x0000000000000000       0x12 ../AVR-Programming-Library/USART.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(RC_Car.elf elf32-avr)
LOAD linker stubs
